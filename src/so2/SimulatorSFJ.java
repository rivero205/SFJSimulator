/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package so2;

import java.util.ArrayList;
import java.util.List;
import java.util.Comparator;
import javax.swing.table.DefaultTableModel;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JOptionPane;

/**
 *
 * @author User
 */
public class SimulatorSFJ extends javax.swing.JPanel {

    private int processCounter = 1; // Contador de procesos (P1, P2, ...)
    private DefaultTableModel tableModel; // Modelo para manejar la tabla
    // Lista para almacenar los procesos internamente
    private List<Proceso> listaProcesos = new ArrayList<>();


    public SimulatorSFJ() {
        initComponents();

        tableModel = new DefaultTableModel(new Object[]{"Procesos", "Tiempo de Ráfaga"}, 0);
        TableProcesos.setModel(tableModel);
    }

    public class Proceso {

        private String nombre; // Nombre del proceso (P1, P2, etc.)
        private int tiempoRafaga;  // Tiempo de ráfaga

        // Constructor, getters y setters
        public Proceso(String nombre, int tiempoRafaga) {
            this.nombre = nombre;
            this.tiempoRafaga = tiempoRafaga;
        }

        public String getNombre() {
            return nombre;
        }

        public void setNombre(String nombre) {
            this.nombre = nombre;
        }

        public int getTiempoRafaga() {
            return tiempoRafaga;
        }

        public void setTiempoRafaga(int tiempoRafaga) {
            this.tiempoRafaga = tiempoRafaga;
        }
    }

// Método para ordenar los procesos por tiempo de ráfaga
    private void ordenarProcesos() {
        listaProcesos.sort(Comparator.comparingInt(Proceso::getTiempoRafaga));
    }

    private void actualizarTabla() {
        tableModel.setRowCount(0);

        // Agregar los procesos ordenados a la tabla
        for (Proceso proceso : listaProcesos) {
            tableModel.addRow(new Object[]{proceso.getNombre(), proceso.getTiempoRafaga()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableProcesos = new javax.swing.JTable();
        btnDiagrama = new javax.swing.JButton();
        txtRafaga = new javax.swing.JTextField();
        btnAñadir = new javax.swing.JButton();
        labelTime = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(0, 51, 255));

        jLabel2.setFont(new java.awt.Font("Copperplate Gothic Bold", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("SFJ");

        jLabel3.setFont(new java.awt.Font("Candara Light", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SIMULATOR");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/so2/simulador-de-realidad-virtual (1).png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(229, 229, 229))
        );

        TableProcesos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Procesos", "Tiempo de Ráfaga"
            }
        ));
        jScrollPane1.setViewportView(TableProcesos);

        btnDiagrama.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnDiagrama.setIcon(new javax.swing.ImageIcon("C:\\Users\\User\\OneDrive - EnLaNube\\Documentos\\NetBeansProjects\\SO\\src\\main\\java\\resources\\images\\descargar (1).png")); // NOI18N
        btnDiagrama.setText("GENERAR DIAGRAMA");
        btnDiagrama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDiagramaActionPerformed(evt);
            }
        });

        txtRafaga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRafagaActionPerformed(evt);
            }
        });

        btnAñadir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/so2/mas (2).png"))); // NOI18N
        btnAñadir.setText("Añadir Proceso");
        btnAñadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirActionPerformed(evt);
            }
        });

        labelTime.setText("Tiempo promedio de espera:");

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 12)); // NOI18N
        jLabel1.setText("copyright © Maicol Vivero all rights reserveds ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(105, 105, 105)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(btnDiagrama, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(138, 138, 138))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(txtRafaga, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnAñadir, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelTime))
                        .addContainerGap(132, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(21, 21, 21))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAñadir)
                    .addComponent(txtRafaga, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(labelTime)
                .addGap(25, 25, 25)
                .addComponent(btnDiagrama, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtRafagaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRafagaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRafagaActionPerformed

    private void btnAñadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirActionPerformed
        try {
            // Obtener el tiempo de ráfaga ingresado
            String rafagaText = txtRafaga.getText().trim();
            int tiempoRafaga = Integer.parseInt(rafagaText);

            // Añadir proceso con nombre automático (P1, P2, ...)
            String proceso = "P" + processCounter++;

            // Crear objeto para el proceso (nombre + tiempo ráfaga)
            Proceso nuevoProceso = new Proceso(proceso, tiempoRafaga);
            listaProcesos.add(nuevoProceso);  // Agregar proceso a la lista

            // Limpiar el campo de texto
            txtRafaga.setText("");

            // Ordenar la lista de procesos internamente por tiempo de ráfaga
            ordenarProcesos();

            // Actualizar la tabla con los procesos ordenados
            actualizarTabla();

            // Calcular el tiempo promedio de espera
            calcularTiempoPromedio();
        } catch (NumberFormatException e) {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido.");
        }
    }//GEN-LAST:event_btnAñadirActionPerformed

    private void btnDiagramaActionPerformed(java.awt.event.ActionEvent evt) {
        if (listaProcesos.isEmpty()) {
            JOptionPane.showMessageDialog(this, 
                "No hay procesos para mostrar en el diagrama", 
                "Error", 
                JOptionPane.WARNING_MESSAGE);
            return;
        }

        JFrame diagramFrame = new JFrame("Diagrama de Gantt - SJF");
        DiagramaGantt diagrama = new DiagramaGantt(listaProcesos);
        
        // Crear un JScrollPane y añadir el diagrama
        JScrollPane scrollPane = new JScrollPane(diagrama);
        scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
        scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
        
        diagramFrame.add(scrollPane);
        diagramFrame.setSize(800, 400);
        diagramFrame.setLocationRelativeTo(null);
        diagramFrame.setVisible(true);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableProcesos;
    private javax.swing.JButton btnAñadir;
    private javax.swing.JButton btnDiagrama;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelTime;
    private javax.swing.JTextField txtRafaga;
    // End of variables declaration//GEN-END:variables

    // Método para calcular el tiempo promedio de espera
    private void calcularTiempoPromedio() {
        int numProcesos = listaProcesos.size();
        if (numProcesos == 0) {
            labelTime.setText("Tiempo promedio de espera: 0");
            return;
        }

        int tiempoEsperaAcumulado = 0;
        int tiempoAcumulado = 0;

        // Calcular tiempos de espera acumulativos
        for (Proceso proceso : listaProcesos) {
            tiempoEsperaAcumulado += tiempoAcumulado; // Sumar el tiempo de espera de los procesos anteriores
            tiempoAcumulado += proceso.getTiempoRafaga(); // Acumular el tiempo de ráfaga actual
        }

        // Calcular el promedio
        double promedioEspera = (double) tiempoEsperaAcumulado / numProcesos;
        labelTime.setText("Tiempo promedio de espera: " + String.format("%.2f", promedioEspera));
    }

}
